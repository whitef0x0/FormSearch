// Generated by CoffeeScript 1.3.3
(function() {
  var app, express, fs, http, https, models, path, routes;

  models = require("./models");

  express = require("express");

  routes = require("./routes");

  http = require("http");

  path = require("path");

  https = require("https");

  fs = require("fs");

  app = express();

  app.configure(function() {
    app.set("port", process.env.PORT || 3001);
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.favicon());
    app.use(express.logger("dev"));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    app.use(express["static"](path.join(__dirname, "public")));
    return app.use(express["static"](__dirname + "/upload"));
  });

  app.configure("development", function() {
    return app.use(express.errorHandler());
  });

  /*
    HTTPS Routing controls
  */


  console.log(routes.layout);

  app.get("/", routes.layout);

  app.get("/upload", routes.upload);

  app.get("/api/results", routes.results);

  app.get("/api/places", routes.places);

  app.post("/api/upload", function(req, res) {
    var form;
    console.log(req.body);
    form = {
      title: req.body.title,
      pid: req.body.city,
      name: req.body.institution,
      rid: req.body.reason
    };
    if (req.body.ped_t) {
      form.is_ped = 't';
    } else if (req.body.ped_f) {
      form.is_ped = 'f';
    }
    models.Upload(form);
    return res.redirect("back");
    /*
      fs.readFile req.files.displayForm.path, (err, data) ->
        newPath = __dirname + "/uploads/"
    
        form.name = newPath #.replace "/uploads/",""
        form.title = req.body.title
        form.is_ped = req.body.city
        form.location.city = req.body.city
        form.location.name = req.body.institution
        form.reason = req.body.diagnosis
    
        fs.writeFile newPath, data, (err) ->
          models.Upload(form) ->
            res.redirect "back"
    */

  });

  http.createServer(app).listen(app.get("port"), "0.0.0.0", function() {
    return console.log("Express server listening on port " + app.get("port"));
  });

}).call(this);
